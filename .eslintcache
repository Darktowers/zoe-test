[{"C:\\Users\\Darktower\\Desktop\\App Zoe\\zoe\\src\\App.tsx":"1","C:\\Users\\Darktower\\Desktop\\App Zoe\\zoe\\src\\pages\\home\\Home.tsx":"2","C:\\Users\\Darktower\\Desktop\\App Zoe\\zoe\\src\\index.tsx":"3","C:\\Users\\Darktower\\Desktop\\App Zoe\\zoe\\src\\pages\\Home\\Home.tsx":"4","C:\\Users\\Darktower\\Desktop\\App Zoe\\zoe\\src\\reportWebVitals.ts":"5","C:\\Users\\Darktower\\Desktop\\App Zoe\\zoe\\src\\pages\\Agents\\Agents.tsx":"6","C:\\Users\\Darktower\\Desktop\\App Zoe\\zoe\\src\\components\\AgentCard\\AgentCard.tsx":"7","C:\\Users\\Darktower\\Desktop\\App Zoe\\zoe\\src\\services\\agents\\agentsService.ts":"8","C:\\Users\\Darktower\\Desktop\\App Zoe\\zoe\\src\\components\\Menu\\Menu.tsx":"9"},{"size":686,"mtime":1610755629587,"results":"10","hashOfConfig":"11"},{"size":271,"mtime":1610591206870,"results":"12","hashOfConfig":"11"},{"size":595,"mtime":1610589901640,"results":"13","hashOfConfig":"11"},{"size":1855,"mtime":1610753986008,"results":"14","hashOfConfig":"11"},{"size":425,"mtime":1610587769840,"results":"15","hashOfConfig":"11"},{"size":4782,"mtime":1610755128878,"results":"16","hashOfConfig":"11"},{"size":801,"mtime":1610754106472,"results":"17","hashOfConfig":"11"},{"size":270,"mtime":1610685574670,"results":"18","hashOfConfig":"11"},{"size":356,"mtime":1610749514592,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qjpmt1",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Darktower\\Desktop\\App Zoe\\zoe\\src\\App.tsx",[],"C:\\Users\\Darktower\\Desktop\\App Zoe\\zoe\\src\\pages\\home\\Home.tsx",[],"C:\\Users\\Darktower\\Desktop\\App Zoe\\zoe\\src\\index.tsx",[],"C:\\Users\\Darktower\\Desktop\\App Zoe\\zoe\\src\\pages\\Home\\Home.tsx",[],"C:\\Users\\Darktower\\Desktop\\App Zoe\\zoe\\src\\reportWebVitals.ts",[],"C:\\Users\\Darktower\\Desktop\\App Zoe\\zoe\\src\\pages\\Agents\\Agents.tsx",["39"],"import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport AgentCard from '../../components/AgentCard/AgentCard';\r\nimport { Agent } from '../../models/Agent';\r\nimport AgentsService from '../../services/agents/agentsService';\r\nimport './Agents.scss'\r\n\r\nconst agentsService = new AgentsService()\r\n\r\nconst Agents = () => {\r\n    let { income } = useParams<{ income: string }>();\r\n    const [agents, setAgents] = useState<Agent[]>([])\r\n    const [filterAgents, setFilterAgents] = useState<Agent[]>([])\r\n    const [indexPaginate, setIndexPaginate] = useState(0);\r\n    const [renderAgents, setRenderAgents] = useState<Agent[]>([])\r\n\r\n    const seeLess = () => {\r\n        const paginatedData = [...filterAgents]\r\n        const newIndexPaginate = indexPaginate > 3 ? indexPaginate - 3 : 3;\r\n        const newRenderAgents = paginatedData.slice(0, newIndexPaginate)\r\n        setRenderAgents(newRenderAgents)\r\n        setIndexPaginate(newIndexPaginate)\r\n    }\r\n\r\n    const findAgents = () => {\r\n        const newIncome = parseInt(income);\r\n        if (newIncome && newIncome < 10000) return\r\n        if (agents && agents.length === 0) return\r\n        const filterData = agents.filter((agent: Agent) => agent.income >= (newIncome - 10000) && agent.income <= (newIncome + 10000))\r\n        console.log(filterData)\r\n        setFilterAgents(filterData)\r\n        setRenderAgents(filterData.slice(0, indexPaginate + 3))\r\n        setIndexPaginate(indexPaginate + 3)\r\n    }\r\n\r\n    const seeMore = () => {\r\n        if (filterAgents.length === 0) return\r\n        const paginatedData = [...filterAgents]\r\n        const newIndexPaginate = indexPaginate >= paginatedData.length ? indexPaginate : indexPaginate + 3\r\n        const newRenderAgents = paginatedData.slice(0, newIndexPaginate)\r\n        setIndexPaginate(newIndexPaginate)\r\n        setRenderAgents(newRenderAgents)\r\n    }\r\n    const orderAgents = (event: any) => {\r\n        const prop = event.target.value\r\n        const newRenderAgents = [...renderAgents];\r\n        switch (prop) {\r\n            case 'name':\r\n                newRenderAgents.sort((a, b) => a.name < b.name ? -1 : 0)\r\n                break;\r\n            case 'id':\r\n                newRenderAgents.sort((a, b) => a.id - b.id)\r\n                break;\r\n            case 'incomH':\r\n                newRenderAgents.sort((a, b) => b.income - a.income)\r\n                break;\r\n            case 'incomL':\r\n                newRenderAgents.sort((a, b) => a.income - b.income)\r\n                break;\r\n            default:\r\n                newRenderAgents.sort((a, b) => a.id - b.id)\r\n                break;\r\n        }\r\n        setRenderAgents(newRenderAgents);\r\n    }\r\n    useEffect(() => {\r\n        const getAgents = async () => {\r\n            const dataAgents = await agentsService.getAgents()\r\n            setAgents(dataAgents)\r\n        }\r\n        getAgents()\r\n    }, [income])\r\n\r\n    useEffect(() => {\r\n        findAgents()\r\n    }, [agents])\r\n\r\n    return (<>\r\n        <main className=\"agents container\">\r\n            <section className=\"agents-userInfo\">\r\n                <h1>Your matches</h1>\r\n                <h3>Your income: <b>${Number(income).toLocaleString()}</b></h3>\r\n            </section>\r\n            {\r\n                renderAgents.length > 0 ?\r\n                    <section className=\"agents-controls\">\r\n                        <label htmlFor=\"filter\">Order agents by</label>\r\n                        <select name=\"\" id=\"filter\" onChange={orderAgents}>\r\n                            <option value=\"0\">Select...</option>\r\n                            <option value=\"name\">Name (A-Z)</option>\r\n                            <option value=\"id\">ID</option>\r\n                            <option value=\"incomH\">Income: High first</option>\r\n                            <option value=\"incomL\">Income: Low first</option>\r\n                        </select>\r\n                    </section> : null\r\n            }\r\n            <section className=\"agents-container\">\r\n                {\r\n                    renderAgents.length > 0 ? renderAgents.map((agent, i) => (\r\n                        <AgentCard key={i} {...agent} />\r\n                    )) : null\r\n                }\r\n\r\n            </section>\r\n            {\r\n                renderAgents.length === 0 ?\r\n                    <section className=\"agents-notFound\">\r\n                        <h2>There is no agents for your income</h2>\r\n                    </section> :\r\n                    <section className=\"agents-paginator\">\r\n                        <button onClick={() => seeLess()}>Show less -</button>\r\n                        <button onClick={() => seeMore()}>Show more +</button>\r\n                    </section>\r\n            }\r\n\r\n\r\n        </main>\r\n\r\n    </>\r\n    )\r\n}\r\nexport default Agents;","C:\\Users\\Darktower\\Desktop\\App Zoe\\zoe\\src\\components\\AgentCard\\AgentCard.tsx",[],"C:\\Users\\Darktower\\Desktop\\App Zoe\\zoe\\src\\services\\agents\\agentsService.ts",[],"C:\\Users\\Darktower\\Desktop\\App Zoe\\zoe\\src\\components\\Menu\\Menu.tsx",[],{"ruleId":"40","severity":1,"message":"41","line":76,"column":8,"nodeType":"42","endLine":76,"endColumn":16,"suggestions":"43"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'findAgents'. Either include it or remove the dependency array.","ArrayExpression",["44"],{"desc":"45","fix":"46"},"Update the dependencies array to be: [agents, findAgents]",{"range":"47","text":"48"},[2964,2972],"[agents, findAgents]"]